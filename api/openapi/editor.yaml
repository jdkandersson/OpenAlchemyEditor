openapi: "3.0.0"

info:
  title: OpenAlchemy Editor
  description: API backing the OpenAlchemy web editor
  version: "0.1"

servers:
  - url: https://editor.api.openalchemy.io/v1

paths:
  /seed:
    get:
      summary: Retrieve the default seed
      operationId: library.seed.get
      responses:
        200:
          description: The default seed
          content:
            text/plain:
              schema:
                type: string
        500:
          description: The default seed was not set
          content:
            text/plain:
              schema:
                type: string
  /spec/validate-managed:
    post:
      summary: Validate the managed parts of an OpenAPI spec against OpenAlchemy expectations
      operationId: library.spec.validate_managed
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /spec/validate-un-managed:
    post:
      summary: Validate the un managed parts of an OpenAPI spec against OpenAlchemy expectations
      operationId: library.spec.validate_un_managed
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /artifact/calculate:
    post:
      summary: Calculate the OpenAlchemy artifacts from the spec
      operationId: library.artifact.calculate
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: The artifacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactResponse"
        400:
          description: The spec is not valid
          content:
            text/plain:
              schema:
                type: string

components:
  parameters:
    Language:
      in: header
      name: X-LANGUAGE
      description: The language of the spec
      required: true
      schema:
        type: string
        enum:
          - JSON
          - YAML
  schemas:
    ValidationResponseResult:
      description: Whether the spec is valid at the global, model or property level
      type: object
      properties:
        valid:
          description: Whether the spec is valid
          type: boolean
        reason:
          description: If the spec is not valid, the reason that it is not
          type: string
      required:
        - valid
    ValidationResponseProperty:
      description: The validation results for a property
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
      required:
        - result
    ValidationResponseModel:
      description: The validation results for a model
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
        properties:
          description: The results for all properties, included if the model is valid at the model level
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ValidationResponseProperty"
      required:
        - result
    ValidationResponse:
      description: The validation results for the spec
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
        models:
          description: The results for all models, included if the spec is valid at the global level
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ValidationResponseModel"
      required:
        - result
    ArtifactResponseProperty:
      description: The artifacts for a property
      type: object
      properties:
        artifacts:
          type: object
    ArtifactResponseModel:
      description: The artifacts for a model
      type: object
      properties:
        artifacts:
          description: The artifacts for a model
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ArtifactResponseProperty"
    ArtifactResponseModels:
      description: The artifacts for all models
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ArtifactResponseModel"
    ArtifactResponse:
      description: The artifacts for the spec
      type: object
      properties:
        models:
          $ref: "#/components/schemas/ArtifactResponseModels"
