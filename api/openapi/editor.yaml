openapi: "3.0.0"

info:
  title: OpenAlchemy Editor
  description: API backing the OpenAlchemy web editor
  version: "0.1"

servers:
  - url: https://editor.api.openalchemy.io/v1

paths:
  /spec/validate-managed:
    post:
      summary: Validate the managed parts of an OpenAPI spec against OpenAlchemy expectations
      operationId: library.spec.validate_managed
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/SpecValue"
      responses:
        200:
          description: The validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /spec/validate-un-managed:
    post:
      summary: Validate the un managed parts of an OpenAPI spec against OpenAlchemy expectations
      operationId: library.spec.validate_un_managed
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/SpecValue"
      responses:
        200:
          description: The validation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
  /artifact/calculate:
    post:
      summary: Calculate the OpenAlchemy artifacts from the spec
      operationId: library.artifact.calculate
      parameters:
        - $ref: "#/components/parameters/Language"
      requestBody:
        description: The OpenAPI spec to validate
        required: true
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/SpecValue"
      responses:
        200:
          description: The artifacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactResponse"
        400:
          description: The spec is not valid
          content:
            text/plain:
              schema:
                type: string
  /seed:
    get:
      summary: Retrieve the default seed
      operationId: library.seed.get
      responses:
        200:
          description: The default seed
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/SeedValue"
        500:
          description: The default seed was not set
          content:
            text/plain:
              schema:
                type: string
  /seeds:
    get:
      summary: Get all the available seeds
      operationId: library.seeds.list_
      responses:
        200:
          description: All available seeds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Seed"
  /seeds/{seed_path}:
    get:
      summary: Get the value of a seed
      operationId: library.seeds.get
      parameters:
        - in: path
          name: seed_path
          schema:
            $ref: "#/components/schemas/SeedPath"
          required: true
          description: The id of the seed, must be URL encoded
      responses:
        200:
          description: The seed value
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/SeedValue"
        404:
          description: The seed was not found
          content:
            text/plain:
              schema:
                type: string
            application/problem+json:
              schema:
                type: object

components:
  parameters:
    Language:
      in: header
      name: X-LANGUAGE
      description: The language of the spec
      required: true
      schema:
        type: string
        enum:
          - JSON
          - YAML
  schemas:
    SeedName:
      description: The name of a seed.
      type: string
    SeedPath:
      description: The path to a seed.
      type: string
      format: path
    Seed:
      description: Information about a seed
      type: object
      properties:
        name:
          $ref: "#/components/schemas/SeedName"
        path:
          $ref: "#/components/schemas/SeedPath"
      required:
        - name
        - path
    SeedValue:
      description: The value of a seed.
      type: string
    SpecValue:
      description: The value of a spec.
      type: string
    ValidationResponseResult:
      description: Whether the spec is valid at the global, model or property level
      type: object
      properties:
        valid:
          description: Whether the spec is valid
          type: boolean
        reason:
          description: If the spec is not valid, the reason that it is not
          type: string
      required:
        - valid
    ValidationResponseProperty:
      description: The validation results for a property
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
      required:
        - result
    ValidationResponseModel:
      description: The validation results for a model
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
        properties:
          description: The results for all properties, included if the model is valid at the model level
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ValidationResponseProperty"
      required:
        - result
    ValidationResponseModels:
      description: The results for all models, included if the spec is valid at the global level
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ValidationResponseModel"
    ValidationResponse:
      description: The validation results for the spec
      type: object
      properties:
        result:
          $ref: "#/components/schemas/ValidationResponseResult"
        models:
          $ref: "#/components/schemas/ValidationResponseModels"
      required:
        - result
    ArtifactResponseKwargs:
      description: Keyword arguments
      type: object
    ArtifactResponseDescription:
      description: A description for the model
      type: string
    ArtifactResponseRequired:
      description: Whether a property is required
      type: boolean
    ArtifactResponsePropertyBase:
      description: Base for the definition of a property
      type: object
      properties:
        type:
          type: string
          enum:
            - SIMPLE
            - JSON
            - RELATIONSHIP
            - BACKREF
        required:
          $ref: "#/components/schemas/ArtifactResponseRequired"
        description:
          $ref: "#/components/schemas/ArtifactResponseDescription"
      required:
        - type
    ArtifactResponsePropertySimpleOpenApiType:
      description: The type for simple property
      type: string
    ArtifactResponsePropertySimpleOpenApiFormat:
      description: The format for simple property
      type: string
    ArtifactResponsePropertySimpleOpenApiMaxLength:
      description: The maxLength for simple property
      type: integer
    ArtifactResponsePropertySimpleOpenApiNullable:
      description: The nullable for simple property
      type: boolean
    ArtifactResponsePropertySimpleOpenApiDefault:
      description: The default for simple property
      oneOf:
        - type: integer
        - type: number
        - type: string
        - type: boolean
    ArtifactResponsePropertySimpleOpenApiReadOnly:
      description: The readOnly for simple property
      type: boolean
    ArtifactResponsePropertySimpleOpenApiWriteOnly:
      description: The writeOnly for simple property
      type: boolean
    ArtifactResponsePropertySimpleOpenApi:
      description: The OpenAPI artifacts for a simple property
      type: object
      properties:
        type:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiType"
        format:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiFormat"
        max_length:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiMaxLength"
        nullable:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiNullable"
        default:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiDefault"
        read_only:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiReadOnly"
        write_only:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiWriteOnly"
      required:
        - type
    ArtifactResponsePropertySimpleExtensionPrimaryKey:
      description: The primary key for simple property
      type: boolean
    ArtifactResponsePropertySimpleExtensionAutoincrement:
      description: The autoincrement for simple property
      type: boolean
    ArtifactResponsePropertySimpleExtensionIndex:
      description: The index for simple property
      type: boolean
    ArtifactResponsePropertySimpleExtensionUnique:
      description: The unique for simple property
      type: boolean
    ArtifactResponsePropertySimpleExtensionServerDefault:
      description: The server default for simple property
      type: string
    ArtifactResponsePropertySimpleExtensionForeignKey:
      description: The server foreign key for simple property
      type: string
    ArtifactResponsePropertySimpleExtension:
      description: The extension artifacts for a simple property
      type: object
      properties:
        primary_key:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionPrimaryKey"
        autoincrement:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionAutoincrement"
        index:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionIndex"
        unique:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionUnique"
        server_default:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionServerDefault"
        foreign_key:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionForeignKey"
        kwargs:
          $ref: "#/components/schemas/ArtifactResponseKwargs"
        foreign_key_kwargs:
          $ref: "#/components/schemas/ArtifactResponseKwargs"
      required:
        - primary_key
    ArtifactResponsePropertySimpleType:
      description: The type for simple property
      type: string
      enum:
        - SIMPLE
    ArtifactResponsePropertySimple:
      description: The artifacts for a simple property
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyBase"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleType"
            open_api:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApi"
            extension:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtension"
            required:
              $ref: "#/components/schemas/ArtifactResponseRequired"
          required:
            - type
            - open_api
            - extension
            - required
    ArtifactResponsePropertyJsonOpenApi:
      description: The OpenAPI artifacts for a json property
      type: object
      properties:
        nullable:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiNullable"
        read_only:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiReadOnly"
        write_only:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiWriteOnly"
    ArtifactResponsePropertyJsonExtension:
      description: The extension artifacts for a Json property
      type: object
      properties:
        primary_key:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionPrimaryKey"
        index:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionIndex"
        unique:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionUnique"
        foreign_key:
          $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionForeignKey"
        kwargs:
          $ref: "#/components/schemas/ArtifactResponseKwargs"
        foreign_key_kwargs:
          $ref: "#/components/schemas/ArtifactResponseKwargs"
      required:
        - primary_key
    ArtifactResponsePropertyJsonType:
      description: The type for Json property
      type: string
      enum:
        - JSON
    ArtifactResponsePropertyJson:
      description: The artifacts for a json property
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyBase"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/ArtifactResponsePropertyJsonType"
            open_api:
              $ref: "#/components/schemas/ArtifactResponsePropertyJsonOpenApi"
            extension:
              $ref: "#/components/schemas/ArtifactResponsePropertyJsonExtension"
            required:
              $ref: "#/components/schemas/ArtifactResponseRequired"
            schema:
              type: object
          required:
            - type
            - open_api
            - extension
            - required
    ArtifactResponsePropertyRelationshipBaseType:
      description: The type for a relationship
      type: string
      enum:
        - RELATIONSHIP
    ArtifactResponsePropertyRelationshipBaseSubType:
      description: The sub type for a relationship
      type: string
      enum:
        - MANY_TO_ONE
        - ONE_TO_ONE
        - ONE_TO_MANY
        - MANY_TO_MANY
    ArtifactResponsePropertyRelationshipBaseParent:
      description: The parent for a relationship
      type: string
    ArtifactResponsePropertyRelationshipBaseBackrefProperty:
      description: The backref property for a relationship
      type: string
    ArtifactResponsePropertyRelationshipBase:
      description: The base for all relationship artifacts
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyBase"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBaseType"
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBaseSubType"
            parent:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBaseParent"
            backref_property:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBaseBackrefProperty"
            kwargs:
              $ref: "#/components/schemas/ArtifactResponseKwargs"
            write_only:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiWriteOnly"
            required:
              $ref: "#/components/schemas/ArtifactResponseRequired"
          required:
            - sub_type
            - parent
            - required
    ArtifactResponsePropertyRelationshipNotManyToManySubType:
      description: The sub type for a relationship that is not many to many
      type: string
      enum:
        - MANY_TO_ONE
        - ONE_TO_ONE
        - ONE_TO_MANY
    ArtifactResponsePropertyRelationshipNotManyToManyForeignKeyProperty:
      description: The foreign key property for a relationship that is not many to many
      type: string
    ArtifactResponsePropertyRelationshipNotManyToMany:
      description: The base for all not many-to-many relationship artifacts
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBase"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipNotManyToManySubType"
            foreign_key:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleExtensionForeignKey"
            foreign_key_property:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipNotManyToManyForeignKeyProperty"
          required:
            - foreign_key
            - foreign_key_property
            - sub_type
    ArtifactResponsePropertyRelationshipOneToManySubType:
      description: The sub type for a relationship that is one to many
      type: string
      enum:
        - ONE_TO_MANY
    ArtifactResponsePropertyRelationshipOneToMany:
      description: The artifacts for a one to many relationship
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipNotManyToMany"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipOneToManySubType"
          required:
            - sub_type
    ArtifactResponsePropertyRelationshipXToOneSubType:
      description: The sub type for a relationship that is x to one
      type: string
      enum:
        - MANY_TO_ONE
        - ONE_TO_ONE
    ArtifactResponsePropertyRelationshipXToOne:
      description: The artifacts for a x to one relationship
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipNotManyToMany"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipXToOneSubType"
            nullable:
              $ref: "#/components/schemas/ArtifactResponsePropertySimpleOpenApiNullable"
          required:
            - sub_type
    ArtifactResponsePropertyRelationshipManyToOneSubType:
      description: The sub type for a relationship that is many to one
      type: string
      enum:
        - MANY_TO_ONE
    ArtifactResponsePropertyRelationshipManyToOne:
      description: The artifacts for a many to one relationship
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipXToOne"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipManyToOneSubType"
          required:
            - sub_type
    ArtifactResponsePropertyRelationshipOneToOneSubType:
      description: The sub type for a relationship that is one to one
      type: string
      enum:
        - ONE_TO_ONE
    ArtifactResponsePropertyRelationshipOneToOne:
      description: The artifacts for a one to one relationship
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipXToOne"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipOneToOneSubType"
          required:
            - sub_type
    ArtifactResponsePropertyRelationshipManyToManySubType:
      description: The sub type for a relationship that is many to many
      type: string
      enum:
        - MANY_TO_MANY
    ArtifactResponsePropertyRelationshipManyToManySecondary:
      description: The secondary for a relationship that is many to many
      type: string
    ArtifactResponsePropertyRelationshipManyToMany:
      description: The artifacts for a many to many relationship
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipBase"
        - type: object
          properties:
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipManyToManySubType"
            secondary:
              $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipManyToManySecondary"
          required:
            - sub_type
            - secondary
    ArtifactResponsePropertyRelationship:
      oneOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipManyToOne"
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipOneToOne"
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipOneToMany"
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationshipManyToMany"
    ArtifactResponsePropertyBackrefType:
      description: The type for backref property
      type: string
      enum:
        - BACKREF
    ArtifactResponsePropertyBackrefSubType:
      description: The sub type for backref property
      type: string
      enum:
        - OBJECT
        - ARRAY
    ArtifactResponsePropertyBackref:
      description: The artifacts for a backref property
      allOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertyBase"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/ArtifactResponsePropertyBackrefType"
            sub_type:
              $ref: "#/components/schemas/ArtifactResponsePropertyBackrefSubType"
            properties:
              type: array
              items:
                type: string
            schema:
              type: object
          required:
            - type
            - sub_type
            - properties
            - schema
    ArtifactResponsePropertyAll:
      oneOf:
        - $ref: "#/components/schemas/ArtifactResponsePropertySimple"
        - $ref: "#/components/schemas/ArtifactResponsePropertyJson"
        - $ref: "#/components/schemas/ArtifactResponsePropertyRelationship"
        - $ref: "#/components/schemas/ArtifactResponsePropertyBackref"
    ArtifactResponseProperty:
      description: The artifacts for a property
      type: object
      properties:
        artifacts:
          $ref: "#/components/schemas/ArtifactResponsePropertyAll"
    ArtifactResponseProperties:
      description: The artifacts for the properties of a model
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ArtifactResponseProperty"
    ArtifactResponseModelTablename:
      description: The name of the table for the schema
      type: string
    ArtifactResponseModelInherits:
      description: Whether the model inherits
      type: boolean
    ArtifactResponseModelParent:
      description: The name of the parent if the model inherits
      type: string
    ArtifactResponseModelMixins:
      description: Base classes mixed into the model
      type: array
      items:
        type: string
    ArtifactResponseModelIndex:
      description: Index for the model
      type: object
      properties:
        expressions:
          type: array
          items:
            type: string
        name:
          type: string
        unique:
          type: boolean
      required:
        - expressions
    ArtifactResponseModelCompositeIndex:
      description: Indexes for the model
      type: array
      items:
        $ref: "#/components/schemas/ArtifactResponseModelIndex"
    ArtifactResponseModelUnique:
      description: Unique index for the model
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        name:
          type: string
      required:
        - columns
    ArtifactResponseModelCompositeUnique:
      description: Indexes for the model
      type: array
      items:
        $ref: "#/components/schemas/ArtifactResponseModelUnique"
    ArtifactResponseModelArtifacts:
      description: The artifacts for a model
      type: object
      properties:
        tablename:
          $ref: "#/components/schemas/ArtifactResponseModelTablename"
        inherits:
          $ref: "#/components/schemas/ArtifactResponseModelInherits"
        parent:
          $ref: "#/components/schemas/ArtifactResponseModelParent"
        description:
          $ref: "#/components/schemas/ArtifactResponseDescription"
        mixins:
          $ref: "#/components/schemas/ArtifactResponseModelMixins"
        kwargs:
          $ref: "#/components/schemas/ArtifactResponseKwargs"
        composite_index:
          $ref: "#/components/schemas/ArtifactResponseModelCompositeIndex"
        composite_unique:
          $ref: "#/components/schemas/ArtifactResponseModelCompositeUnique"
      required:
        - tablename
    ArtifactResponseModel:
      description: The artifacts for a model
      type: object
      properties:
        artifacts:
          $ref: "#/components/schemas/ArtifactResponseModelArtifacts"
        properties:
          $ref: "#/components/schemas/ArtifactResponseProperties"
      required:
        - artifacts
    ArtifactResponseModels:
      description: The artifacts for all models
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ArtifactResponseModel"
    ArtifactResponse:
      description: The artifacts for the spec
      type: object
      properties:
        models:
          $ref: "#/components/schemas/ArtifactResponseModels"
